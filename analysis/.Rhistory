geom_errorbar(aes(x = 1, y = mean_rating, ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
#geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm)
demographics
data
getwd()
exists("../data")
dir.create(("../data"), showWarnings = FALSE)
data_save <- c("../data")
dir.create(data_save, showWarnings = FALSE)
write.csv(data, file.path(data_save, "data.csv"))
write.csv(demographics, file.path(data_save, "demographic_data.csv"))
write.csv(data, file.path(data_save, "data.csv"), row.names = FALSE)
write.csv(demographics, file.path(data_save, "demographic_data.csv"), row.names = FALSE)
options(dplyr.summarise.inform = FALSE)
data
demographics
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
this_demogdata
debugSource("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
# demographic and musical background data
this_demogdata <- cbind(this_data$participant, this_data$EXPRA.code..only.for.EXPRA.students., this_data[1], this_data$age_resp.text)[which(this_data$age_resp.text!=""),] %>%
as.data.frame() %>% setNames(c("ID", "EXPRA_code", "sex", "age"))
this_demogdata
this_musicdata <- cbind(this_data$scale, this_data$GSI_question_loop.thisIndex, this_data$questions_english, this_data$questions_german,
this_data$GSI_slider.response, this_data$labels_marks)[which(this_data$scale!=""),] %>%
as.data.frame() %>% setNames(c("scale","q_n","question_en","question_de","response","resp_scale"))
this_musicdata
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
data <- wrangled_data$data
demographics <- wrangled_data$demgraphics
data <- wrangled_data$data
data
demographics <- wrangled_data$demgraphics
demographics
wrangled_data <- wrangle_data(data_path, filtered_data_files)
data <- wrangled_data$data
demographics <- wrangled_data$demgraphics
rating_data <- data[!is.na(data$rating),]
rating_data
# ratings per wm group, level of explicit information, and question
rating_summary <- rating_data %>% group_by(wm, condition, question_n) %>% summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# average ratings over questions
ratings_mu_summary <- rating_data %>% group_by(wm, condition) %>% summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating, ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm)
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating, ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
theme_classic()
data
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
data
data$question_n
levels(data$question_n)
factor(data$question_n)
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
debugSource("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
data <- rbind(data, this_data4) %>% mutate(across(all_of(fctrs), as.factor),
across(all_of(numcs), as.numeric)) %>%
mutate(question_n = factor(question_n,
labels = c("Interpretation","Timing/Rhythm","Tone Quality","Expressiveness")))
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
data <- wrangled_data$data
data$question_n
labels(data$question_n)
factor(data$question_n, labels = c("a","b","c","d"))
numcs <- c("age","confidence","rating","final_eval","knew_piece")
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
wrangled_data <- wrangle_data(data_path, filtered_data_files)
source("~/Repos/RRI_analysis/analysis/funs.R")
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
wrangled_data <- wrangle_data(data_path, filtered_data_files)
numcs <- c("age","confidence","rating","final_eval","knew_piece")
<-
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
wrangled_data <- wrangle_data(data_path, filtered_data_files)
wrangled_data <- wrangle_data(data_path, filtered_data_files)
rbind(data, this_data4) %>% mutate(across(all_of(fctrs), as.factor),
across(all_of(numcs), as.numeric))
source("~/Repos/RRI_analysis/analysis/funs.R")
debugSource("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
numcs
rbind(data, this_data4) %>% mutate(across(all_of(fctrs), as.factor),
across(all_of(numcs), as.numeric))
data <- rbind(data, this_data4) %>% mutate(across(all_of(fctrs), as.factor),
across(all_of(numcs), as.numeric))
data$question_n
debugSource("~/Repos/RRI_analysis/analysis/funs.R")
data <- data %>%
mutate(question_n = factor(question_n,
labels = c("Interpretation","Timing/Rhythm","Tone Quality","Expressiveness")))
source("~/Repos/RRI_analysis/analysis/funs.R")
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
wrangled_data <- wrangle_data(data_path, filtered_data_files)
wrangled_data <- wrangle_data(data_path, filtered_data_files)
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
data <- wrangled_data$data
data <- wrangled_data$data %>% mutate(question_n = factor(question_n, labels = c("Interpretation","Timing/Rhythm","Tone Quality","Expressiveness")))
data
# ratings per wm group, level of explicit information, and question
rating_summary <- rating_data %>% group_by(wm, condition, question_n) %>% summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# average ratings over questions
ratings_mu_summary <- rating_data %>% group_by(wm, condition) %>% summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
scale_x_discrete()
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
scale_x_discrete(name = NULL) +
scale_y_discrete(name = "liking ratings") +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
theme_classic()
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
#scale_x_discrete(name = NULL) +
scale_y_discrete(name = "liking ratings") +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
theme_classic()
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
theme_classic()
rating_summary
rating_data <- data[!is.na(data$rating),]
# ratings per wm group, level of explicit information, and question
rating_summary <- rating_data %>% group_by(wm, condition, question_n) %>% summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# average ratings over questions
ratings_mu_summary <- rating_data %>% group_by(wm, condition) %>% summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
theme_classic() +
theme(axis.title.y = "liking ratings")
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
theme_classic() +
theme(axis.title.y = element_text("liking ratings"))
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
theme_classic() +
theme(axis.title.y = element_text("liking ratings"))
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
theme_classic() +
labs(y = "liking ratings")
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
theme_classic() +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
scale_color_brewer(palette = "Dark2") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
rating_data
numcs <- c("age","confidence","rating","final_eval","knew_piece","wm")
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
data <- wrangled_data$data %>% mutate(question_n = factor(question_n, labels = c("Interpretation","Timing/Rhythm","Tone Quality","Expressiveness"))) # make a better label for the question index
demographics <- wrangled_data$demgraphics
data_save <- c("../data")
dir.create(data_save, showWarnings = FALSE)
write.csv(data, file.path(data_save, "data.csv"), row.names = FALSE)
write.csv(demographics, file.path(data_save, "demographic_data.csv"), row.names = FALSE)
rating_data <- data[!is.na(data$rating),]
# ratings per wm group, level of explicit information, and question
rating_summary <- rating_data %>% group_by(wm, condition, question_n) %>% summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# average ratings over questions
ratings_mu_summary <- rating_data %>% group_by(wm, condition) %>% summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm, labeller = as_labeller(0 = "no load", 1 = "wm load")) +
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm, labeller = as_labeller(c(0 = "no load", 1 = "wm load"))) +
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm, labeller = as_labeller(c("no load" = 0, "wm load" = 1))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm, labeller = as_labeller("no load" = 0, "wm load" = 1)) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition)) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.1) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.3) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory
ggplot(ratings_mu_summary) +
geom_point(aes(1, mean_rating, color = condition)) +
geom_errorbar(aes(x = 1, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.3) +
facet_grid(. ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory
ggplot(ratings_mu_summary) +
geom_point(aes(1, mean_rating, color = condition)) +
geom_errorbar(aes(x = 1, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.01) +
facet_grid(. ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory
ggplot(ratings_mu_summary) +
geom_point(aes(1, mean_rating, color = condition)) +
geom_errorbar(aes(x = 1, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.01) +
scale_x_discrete(name = "aggregated scales") +
facet_grid(. ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory
ggplot(ratings_mu_summary) +
geom_point(aes(1, mean_rating, color = condition)) +
geom_errorbar(aes(x = 1, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.02) +
scale_x_discrete(name = "aggregated scales") +
facet_grid(. ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ prestige level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.2) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(. ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
genre_summary <- rating_data %>% group_by(wm, condition, genre, questions) %>% summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
genre_summary <- rating_data %>% group_by(wm, condition, genre, questions_n) %>%
summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
genre_summary <- rating_data %>% group_by(wm, condition, genre, question_n) %>%
summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# mean, se ratings ~ explicit information level * working memory * question
ggplot(rating_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.2) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(genre ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ explicit information level * working memory * question
ggplot(genre_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.2) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(genre ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
data <- wrangled_data$data %>% mutate(question_n = factor(question_n, labels = c("Interpretation","Timing/Rhythm","Tone Quality","Expressiveness"))) # make a better label for the question index
demographics <- wrangled_data$demgraphics
genre_summary <- rating_data %>% group_by(wm, condition, genre, question_n) %>%
summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# mean, se ratings ~ explicit information level * working memory * question
ggplot(genre_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.2) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(genre ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
genre_summary
source("~/Repos/RRI_analysis/analysis/funs.R")
wrangled_data <- wrangle_data(data_path, filtered_data_files)
data <- wrangled_data$data %>% mutate(question_n = factor(question_n, labels = c("Interpretation","Timing/Rhythm","Tone Quality","Expressiveness"))) # make a better label for the question index
demographics <- wrangled_data$demgraphics
data
genre_summary <- rating_data %>% group_by(wm, condition, genre, question_n) %>%
summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
rating_data <- data[!is.na(data$rating),]
genre_summary <- rating_data %>% group_by(wm, condition, genre, question_n) %>%
summarise(mean_rating = mean(rating),
sd_rating = sd(rating),
se_rating = sd_rating/sqrt(nrow(rating_data)))
# mean, se ratings ~ explicit information level * working memory * question
ggplot(genre_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.2) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_grid(genre ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load", 'rock' = "rock", 'classical' = "classical"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
# mean, se ratings ~ explicit information level * working memory * question
ggplot(genre_summary) +
geom_point(aes(question_n, mean_rating, color = condition)) +
geom_errorbar(aes(x = question_n, y = mean_rating,
ymin = mean_rating-se_rating, ymax = mean_rating+se_rating, color = condition),
width = 0.2) +
geom_line(aes(question_n, mean_rating, group = condition, color = condition)) +
facet_wrap(genre ~ wm, labeller = as_labeller(c(`0` = "no load", `1` = "wm load", 'rock' = "rock", 'classical' = "classical"))) +
scale_color_brewer(palette = "Dark2", name = "explicit information") +
theme_classic() +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
labs(y = "liking ratings", x = NULL)
